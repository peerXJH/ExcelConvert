#ifndef __MAIN_H__
#define __MAIN_H__

#include "defaultbin.h"

#define GM_ISP_MAIN_Write_UPDATE_EN(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), value, 0, 0);}while(0)
#define GM_ISP_MAIN_Read_UPDATE_EN(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), addr,0, 0);}while(0)
#define GM_ISP_MAIN_Write_UPDATE_FLAG(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), value, 1, 3);}while(0)
#define GM_ISP_MAIN_Read_UPDATE_FLAG(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), addr,1, 3);}while(0)
#define GM_ISP_MAIN_Write_VERTICAL_FLIP(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), value, 4, 4);}while(0)
#define GM_ISP_MAIN_Read_VERTICAL_FLIP(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), addr,4, 4);}while(0)
#define GM_ISP_MAIN_Write_MAIN_SEL(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), value, 5, 6);}while(0)
#define GM_ISP_MAIN_Read_MAIN_SEL(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x00) * 4), addr,5, 6);}while(0)
#define GM_ISP_MAIN_Write_STRIDE_LRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x01) * 4), value, 0, 12);}while(0)
#define GM_ISP_MAIN_Read_STRIDE_LRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x01) * 4), addr,0, 12);}while(0)
#define GM_ISP_MAIN_Write_STRIDE_CRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x01) * 4), value, 16, 28);}while(0)
#define GM_ISP_MAIN_Read_STRIDE_CRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x01) * 4), addr,16, 28);}while(0)
#define GM_ISP_MAIN_Write_STRIDE_VDP(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x02) * 4), value, 0, 12);}while(0)
#define GM_ISP_MAIN_Read_STRIDE_VDP(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x02) * 4), addr,0, 12);}while(0)
#define GM_ISP_MAIN_Write_PIC_W_LRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x03) * 4), value, 0, 12);}while(0)
#define GM_ISP_MAIN_Read_PIC_W_LRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x03) * 4), addr,0, 12);}while(0)
#define GM_ISP_MAIN_Write_PIC_H_LRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x03) * 4), value, 16, 28);}while(0)
#define GM_ISP_MAIN_Read_PIC_H_LRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x03) * 4), addr,16, 28);}while(0)
#define GM_ISP_MAIN_Write_PIC_W_CRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x04) * 4), value, 0, 12);}while(0)
#define GM_ISP_MAIN_Read_PIC_W_CRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x04) * 4), addr,0, 12);}while(0)
#define GM_ISP_MAIN_Write_PIC_H_CRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x04) * 4), value, 16, 28);}while(0)
#define GM_ISP_MAIN_Read_PIC_H_CRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x04) * 4), addr,16, 28);}while(0)
#define GM_ISP_MAIN_Write_PIC_W_VDP(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x05) * 4), value, 0, 12);}while(0)
#define GM_ISP_MAIN_Read_PIC_W_VDP(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x05) * 4), addr,0, 12);}while(0)
#define GM_ISP_MAIN_Write_PIC_H_VDP(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x05) * 4), value, 16, 28);}while(0)
#define GM_ISP_MAIN_Read_PIC_H_VDP(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x05) * 4), addr,16, 28);}while(0)
#define GM_ISP_MAIN_Write_BASE_CNFG(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x06) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_CNFG(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x06) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_LRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x07) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_LRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x07) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_CRS(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x08) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_CRS(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x08) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_VDP_Y(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x09) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_VDP_Y(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x09) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_VDP_C(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0a) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_VDP_C(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0a) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_VDP_MV_R(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0b) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_VDP_MV_R(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0b) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_BASE_VDP_MV_W(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0c) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_BASE_VDP_MV_W(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0c) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_INFO_00(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0d) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_INFO_00(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0d) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_INFO_01(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0e) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_INFO_01(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0e) * 4), addr,0, 31);}while(0)
#define GM_ISP_MAIN_Write_INFO_02(p, value)		do{WriteDataU32(p, (MAIN_BASE * 4 + (0x0f) * 4), value, 0, 31);}while(0)
#define GM_ISP_MAIN_Read_INFO_02(p, addr)		do{ReadDataU32(p, (MAIN_BASE * 4 + (0x0f) * 4), addr,0, 31);}while(0)
#endif
