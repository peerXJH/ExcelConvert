#ifndef __VIN_H__
#define __VIN_H__

#include "defaultbin.h"

#define GM_ISP_VIN_Write_CNFG_REG_SWRESET(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x00) * 4), value, 0, 0);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_SWRESET(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x00) * 4), addr,0, 0);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_STATUS(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x01) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_H_WIDTH(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x02) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_H_WIDTH(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x02) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_BIT_SWAP_2(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x03) * 4), value, 0, 15);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_BIT_SWAP_2(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x03) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_H(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x04) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_H(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x04) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_MIN_H(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x05) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_MIN_H(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x05) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_TRIG0_END(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x06) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_TRIG0_END(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x06) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_TRIG1_END(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x07) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_TRIG1_END(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x07) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_VOUT1_START(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x08) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_VOUT1_START(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x08) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_WIN_SH(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x09) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_WIN_SH(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x09) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_WIN_EH(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x0a) * 4), value, 0, 13);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_WIN_EH(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x0a) * 4), addr,0, 13);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_TIMEOUT_VL(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x0b) * 4), value, 0, 15);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_TIMEOUT_VL(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x0b) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_TIMEOUTH_HL(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x0c) * 4), value, 0, 15);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_TIMEOUTH_HL(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x0c) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_CNFG_REG_BIT_SWAP_3(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x0e) * 4), value, 0, 15);}while(0)
#define GM_ISP_VIN_Read_CNFG_REG_BIT_SWAP_3(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x0e) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_EN(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x10) * 4), value, 0, 0);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_EN(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x10) * 4), addr,0, 0);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_VS_WIDTH(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x11) * 4), value, 0, 11);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_VS_WIDTH(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x11) * 4), addr,0, 11);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_VTOTAL(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x12) * 4), value, 0, 11);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_VTOTAL(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x12) * 4), addr,0, 11);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_V_ACT(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x13) * 4), value, 0, 11);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_V_ACT(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x13) * 4), addr,0, 11);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_FP_V(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x14) * 4), value, 0, 11);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_FP_V(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x14) * 4), addr,0, 11);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_FP_H(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x15) * 4), value, 0, 11);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_FP_H(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x15) * 4), addr,0, 11);}while(0)
#define GM_ISP_VIN_Write_CNFG_TPG_INIT_VS_CNT(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x16) * 4), value, 0, 15);}while(0)
#define GM_ISP_VIN_Read_CNFG_TPG_INIT_VS_CNT(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x16) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Read_SENSOR_VS_CNT(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x17) * 4), addr,0, 15);}while(0)
#define GM_ISP_VIN_Write_IRQ_MASK(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x1a) * 4), value, 0, 31);}while(0)
#define GM_ISP_VIN_Read_IRQ_MASK(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x1a) * 4), addr,0, 31);}while(0)
#define GM_ISP_VIN_Write_IRQ_CLEAR(p, value)		do{WriteDataU32(p, (VIN_BASE * 4 + (0x1b) * 4), value, 0, 31);}while(0)
#define GM_ISP_VIN_Read_IRQ(p, addr)		do{ReadDataU32(p, (VIN_BASE * 4 + (0x1c) * 4), addr,0, 31);}while(0)
#endif
